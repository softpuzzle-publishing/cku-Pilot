@charset "UTF-8";
.row-0 {
    margin-left: 0px;
    margin-right: 0px; }
    .row-0 > [class^=col] {
        padding-left: 0px;
        padding-right: 0px; }

.row-1 {
    margin-left: -0.5px;
    margin-right: -0.5px; }
    .row-1 > [class^=col] {
        padding-left: 0.5px;
        padding-right: 0.5px; }

.row-2 {
    margin-left: -1px;
    margin-right: -1px; }
    .row-2 > [class^=col] {
        padding-left: 1px;
        padding-right: 1px; }

.row-3 {
    margin-left: -1.5px;
    margin-right: -1.5px; }
    .row-3 > [class^=col] {
        padding-left: 1.5px;
        padding-right: 1.5px; }

.row-4 {
    margin-left: -2px;
    margin-right: -2px; }
    .row-4 > [class^=col] {
        padding-left: 2px;
        padding-right: 2px; }

.row-5 {
    margin-left: -2.5px;
    margin-right: -2.5px; }
    .row-5 > [class^=col] {
        padding-left: 2.5px;
        padding-right: 2.5px; }

.row-10 {
    margin-left: -5px;
    margin-right: -5px; }
    .row-10 > [class^=col] {
        padding-left: 5px;
        padding-right: 5px; }

.row-20 {
    margin-left: -10px;
    margin-right: -10px; }
    .row-20 > [class^=col] {
        padding-left: 10px;
        padding-right: 10px; }

.row-30 {
    margin-left: -15px;
    margin-right: -15px; }
    .row-30 > [class^=col] {
        padding-left: 15px;
        padding-right: 15px; }

.row-40 {
    margin-left: -20px;
    margin-right: -20px; }
    .row-40 > [class^=col] {
        padding-left: 20px;
        padding-right: 20px; }

.row-50 {
    margin-left: -25px;
    margin-right: -25px; }
    .row-50 > [class^=col] {
        padding-left: 25px;
        padding-right: 25px; }

.row-60 {
    margin-left: -30px;
    margin-right: -30px; }
    .row-60 > [class^=col] {
        padding-left: 30px;
        padding-right: 30px; }

.row-70 {
    margin-left: -35px;
    margin-right: -35px; }
    .row-70 > [class^=col] {
        padding-left: 35px;
        padding-right: 35px; }

.row-80 {
    margin-left: -40px;
    margin-right: -40px; }
    .row-80 > [class^=col] {
        padding-left: 40px;
        padding-right: 40px; }

.row-90 {
    margin-left: -45px;
    margin-right: -45px; }
    .row-90 > [class^=col] {
        padding-left: 45px;
        padding-right: 45px; }

.row-100 {
    margin-left: -50px;
    margin-right: -50px; }
    .row-100 > [class^=col] {
        padding-left: 50px;
        padding-right: 50px; }

.row-point5rem {
    margin-left: -0.25rem;
    margin-right: -0.25rem; }
    .row-point5rem > [class^=col] {
        padding-left: 0.25rem;
        padding-right: 0.25rem; }

#loading {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1111;
    width: 100%;
    height: 100%; }
    #loading .dim {
        width: 100%;
        height: 100%;
        position: absolute;
        background: rgba(0, 0, 0, 0.6); }
    #loading .d-flex {
        height: 100vh; }
    #loading .spinner-border {
        position: relative;
        z-index: 1112; }

html.is-loading body {
    overflow: hidden; }

html.is-loading #loading {
    display: block; }

body.body-login {
    height: 100vh;
    background: #f7f8f8; }

#login-wrap {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center; }

.login {
    width: 410px; }
    .login .login-head {
        text-align: center; }
        .login .login-head .login-logo img {
            width: 230px; }
        .login .login-head h1 {
            font-size: 24px;
            font-weight: 700;
            line-height: 1;
            margin-top: 30px;
            color: #57585a; }
    .login .login-body {
        padding: 50px 0; }
        .login .login-body .form-group {
            margin-bottom: .5rem;
            position: relative; }
        .login .login-body .form-control {
            font-size: 16px; }
            .login .login-body .form-control:focus {
                border-color: #000;
                outline: none; }
        .login .login-body .form-control,
        .login .login-body .btn-block {
            padding-top: 0.75rem;
            padding-bottom: 0.75rem;
            height: 56px; }
        .login .login-body .password-visiblity {
            position: absolute;
            top: 50%;
            right: 1rem;
            transform: translateY(-50%);
            display: block;
            font-size: 20px;
            color: #888; }
            .login .login-body .password-visiblity.active i::before {
                content: '\f06e'; }
    .login .login-foot {
        padding: 2rem 0;
        border-top: 1px solid #d5d8db;
        color: #57585a; }
        .login .login-foot > strong {
            margin-bottom: 5px;
            display: block; }
        .login .login-foot > p {
            font-size: 14px; }
        .login .login-foot dl {
            display: flex;
            margin-top: 5px; }
            .login .login-foot dl dt {
                font-weight: 400;
                margin-right: 5px; }
            .login .login-foot dl dd {
                margin-right: 10px; }

html.html-error,
html.html-error body {
    height: 100% !important;
    background: #ffffff; }

body {
    -webkit-font-smoothing: antialiased; }
    body:not(.pop) {
        min-width: 1340px; }
    body .content {
        min-width: 1090px; }

ul {
    padding: 0;
    margin: 0;
    list-style: none; }

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6, p, span, li, strong, b, ol, ul, dl {
    margin: 0; }

button {
    background: transparent;
    border: 0;
    margin: 0;
    padding: 0;
    line-height: 1; }

*:focus {
    outline: 0; }

/* icons */
[class^=icon-] {
    display: inline-block;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    font-size: 0;
    line-height: 1; }

.divider {
    margin-top: 1rem;
    margin-bottom: 1rem;
    height: 1px;
    overflow: hidden;
    background: #000; }

.text-underline {
    text-decoration: underline !important; }

.icon-info-red {
    background: url(../images/icon-info-red.svg) no-repeat center;
    width: 16px;
    height: 16px; }

.icon-warning {
    background-image: url("../images/icon-warning.svg");
    width: 100px;
    height: 92px; }

.width-50px {
    width: 50px !important; }

.width-60px {
    width: 60px !important; }

.width-70px {
    width: 70px !important; }

.width-80px {
    width: 80px !important; }

.width-90px {
    width: 90px !important; }

.width-120px {
    width: 120px !important; }

.width-150px {
    width: 150px !important; }

.width-200px {
    width: 200px !important; }

.width-250px {
    width: 250px !important; }

.width-300px {
    width: 300px !important; }

.width-500px {
    width: 500px !important; }

.height-25px {
    height: 25px !important; }

.height-30px {
    height: 30px !important; }

.height-40px {
    height: 40px !important; }

.height-50px {
    height: 50px !important; }

.height-100px {
    height: 100px !important; }

.height-150px {
    height: 150px !important; }

.min-width-70px {
    min-width: 70px !important; }

.min-width-90px {
    min-width: 90px !important; }

.min-width-100px {
    min-width: 100px !important; }

.min-width-200px {
    min-width: 200px !important; }

.min-width-400px {
    min-width: 400px !important; }

.font-size-xl {
    font-size: 24px !important; }

.font-size-lg {
    font-size: 20px !important; }

.font-size-md {
    font-size: 16px !important; }

.font-size-sm {
    font-size: 12px !important; }

.font-size-11px {
    font-size: 11px !important; }

.font-size-12px {
    font-size: 12px !important; }

.font-size-13px {
    font-size: 13px !important; }

.font-size-14px {
    font-size: 14px !important; }

.font-size-15px {
    font-size: 15px !important; }

.font-size-16px {
    font-size: 16px !important; }

.font-size-18px {
    font-size: 18px !important; }

.font-size-30px {
    font-size: 30px !important; }

@media print {
    body {
        min-width: 0; }
    .content-wrapper {
        background: none; }
    .content {
        padding: 0; }
    @page {
        size: A4; } }

.btn {
    font-weight: 500; }

.btn-round {
    border-radius: 50rem; }

.btn-light {
    color: #0c6276; }

.datepicker-box {
    position: absolute;
    left: 430px;
    top: 0;
    border-radius: 8px;
    box-shadow: 0px 3px 10px 0 rgba(0, 0, 0, 0.06);
    background-color: #ffffff;
    overflow: hidden; }
    .datepicker-box .ui-widget.ui-datepicker {
        border: 0; }

.ui-widget.ui-datepicker {
    width: 300px;
    padding: 1rem;
    border-radius: .25rem;
    border-color: #d5d8db !important; }
    .ui-widget.ui-datepicker .ui-widget-header {
        background: #fff;
        border: 0; }
    .ui-widget.ui-datepicker .ui-state-default {
        border: 0; }
    .ui-widget.ui-datepicker td span,
    .ui-widget.ui-datepicker td a {
        text-align: center;
        border-radius: 10px;
        padding: 6px 2px 0;
        margin: 0 2px;
        width: 31px;
        height: 31px; }
    .ui-widget.ui-datepicker .ui-state-highlight {
        background: #e0f8fd;
        color: #000; }
    .ui-widget.ui-datepicker .ui-state-active {
        background: #0c6276;
        color: #fff !important; }
    .ui-widget.ui-datepicker .ui-datepicker-calendar > thead th {
        border-top: 1px solid #ececea;
        border-bottom: 1px solid #ececea; }
    .ui-widget.ui-datepicker .ui-datepicker-calendar > thead th.ui-datepicker-week-end:first-child,
    .ui-widget.ui-datepicker .ui-datepicker-calendar > tbody td.ui-datepicker-week-end:first-child a {
        color: #f25767; }
    .ui-widget.ui-datepicker .ui-datepicker-calendar > tbody tr:first-child a,
    .ui-widget.ui-datepicker .ui-datepicker-calendar > tbody tr:first-child span {
        margin-top: 8px; }
    .ui-widget.ui-datepicker .ui-datepicker-prev .ui-icon {
        display: none; }
    .ui-widget.ui-datepicker .ui-datepicker-prev::before {
        content: '';
        display: inline-block;
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 5px 7px 5px 0;
        border-color: transparent #0c6276 transparent transparent;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%); }
    .ui-widget.ui-datepicker .ui-datepicker-next .ui-icon {
        display: none; }
    .ui-widget.ui-datepicker .ui-datepicker-next::before {
        content: '';
        display: inline-block;
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 5px 0 5px 7px;
        border-color: transparent transparent transparent #0c6276;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%); }
    .ui-widget.ui-datepicker select.ui-datepicker-month,
    .ui-widget.ui-datepicker select.ui-datepicker-year {
        width: auto;
        border: 0; }
    .ui-widget.ui-datepicker select.ui-datepicker-month {
        margin-left: 12px; }
    .ui-widget.ui-datepicker .ui-timepicker-div .ui-slider-handle {
        background: #0c6276; }
    .ui-widget.ui-datepicker .ui-timepicker-div dl dd {
        margin-bottom: 15px; }
    .ui-widget.ui-datepicker .ui_tpicker_hour_label,
    .ui-widget.ui-datepicker .ui_tpicker_minute_label {
        transform: translateY(-5px); }
    .ui-widget.ui-datepicker .ui-datepicker-buttonpane button {
        padding-top: .5em;
        padding-bottom: .5em; }

textarea.form-control {
    resize: none; }

.form-control[readonly] {
    background: #fff; }

.form-control[readonly] {
    background: #fff; }

.form-control.form-datepicker {
    background: #fff url("../images/icon-calendar.svg") no-repeat right 0.75rem top 50%;
    background-size: 15px auto;
    width: 150px; }

.form-control.form-datetimepicker {
    background: #fff url("../images/icon-calendar.svg") no-repeat right 0.75rem top 50%;
    background-size: 15px auto;
    width: 190px; }

.custom-select {
    box-shadow: none; }

.custom-checkbox.without-label, .custom-radio.without-label {
    padding-left: 0;
    min-height: 1rem;
    font-size: 0;
    display: inline-block;
    vertical-align: middle; }
    .custom-checkbox.without-label .custom-control-input, .custom-radio.without-label .custom-control-input {
        width: 1rem;
        height: 1rem; }
    .custom-checkbox.without-label .custom-control-label, .custom-radio.without-label .custom-control-label {
        width: 1rem;
        height: 1rem; }
    .custom-checkbox.without-label .custom-control-label::before, .custom-radio.without-label .custom-control-label::before {
        left: 0;
        top: 0; }
    .custom-checkbox.without-label .custom-control-label::after, .custom-radio.without-label .custom-control-label::after {
        left: 0;
        top: 0; }

.custom-control-label {
    white-space: nowrap; }
    .custom-control-label::before, .custom-control-label::after {
        top: .1rem; }

.custom-file-label::after {
    content: '파일찾기';
    cursor: pointer; }

label:not(.form-check-label):not(.custom-file-label) {
    font-weight: normal; }

.swiper-pagination-bullet {
    background: #fff !important; }

.swiper-pagination-bullet-active {
    background: #333 !important; }

.pagination {
    justify-content: center;
    margin-top: 1rem; }
    .pagination a.prev a.first, .pagination .pagination a.first {
        padding-left: 40px; }
    .pagination a {
        font-size: 14px;
        font-weight: 300;
        letter-spacing: 0;
        color: #111;
        position: relative;
        margin-right: 14px;
        width: 37px;
        padding: 7px 0;
        box-sizing: border-box;
        border: 1px solid #ddd;
        margin: 0;
        text-align: center;
        text-decoration: none;
        font-weight: 400; }
        .pagination a.active {
            background: #111;
            border-color: #111;
            color: #fff; }
        .pagination a i {
            transform: translateY(1px); }
    .pagination a + a {
        margin-left: -1px; }

.sort {
    display: flex;
    align-items: center; }
    .sort > a {
        color: #999;
        font-size: 12px;
        font-weight: 400;
        letter-spacing: -0.45px;
        padding: 0px 10px 0 11px;
        text-decoration: none;
        text-align: center;
        display: inline-block;
        position: relative; }
        .sort > a.active {
            color: #252525; }
            .sort > a.active:after {
                content: '';
                display: inline-block;
                vertical-align: middle;
                background: url(../images/icon-arrow-01.svg) 50% 50% no-repeat;
                width: 6px;
                height: 6px;
                margin: -2px 0 0 4px;
                -ms-transform: rotate(0);
                -webkit-transform: rotate(0);
                transform: rotate(0);
                transition: transform 0.25s ease;
                -webkit-transition-delay: .15s;
                -o-transition-delay: .1s;
                transition-delay: .1s; }
            .sort > a.active.rotate::after {
                transform: rotate(180deg); }
            .sort > a.active i {
                display: none; }
        .sort > a + a::before {
            content: '';
            display: block;
            width: 1px;
            height: 10px;
            background: #bbb;
            position: absolute;
            left: 0;
            top: 50%;
            margin-top: -6px; }
    .sort > a:first-of-type {
        padding-left: 0; }
    .sort > a:last-of-type {
        padding-right: 0; }

.overflow-y-scroll {
    overflow-y: auto;
    overflow-x: hidden;
    max-height: 900px; }

.overflow-y-modal-scroll {
    overflow-y: auto;
    overflow-x: hidden;
    max-height: 500px; }

.modal-header {
    background: #0c6276;
    color: #fff; }
    .modal-header .close {
        color: #fff;
        text-shadow: 0 1px 0 #000;
        background: url("../images/icon-s-close.svg") no-repeat 50% 50%;
        background-size: 24px auto;
        font-size: 0;
        width: 50px;
        height: 56px; }

.modal-title {
    font-size: 18px;
    font-weight: 700; }

.modal-dialog {
    width: auto; }

.modal[data-overlap=true] {
    z-index: 1052; }

.modal-backdrop ~ .modal-backdrop {
    z-index: 1051; }

.modal-sm i.fa-exclamation-circle {
    transform: translateY(-1px); }

.modal-sm .modal-content {
    padding-top: 1.5rem;
    padding-bottom: 1rem; }

.modal-sm .modal-footer {
    border-top: 0; }

.modal-body .table th,
.modal-body .table td {
    height: auto; }

.content-wrapper {
    margin-left: 250px !important; }

.main-sidebar {
    margin-left: 0 !important; }

.nav-sidebar {
    letter-spacing: 0; }
    .nav-sidebar > .nav-item {
        padding: .25rem 0; }
    .nav-sidebar > .nav-item + .nav-item {
        border-top: 1px solid #777d85; }
    .nav-sidebar .nav-item > .nav-link {
        padding-top: .75rem;
        padding-bottom: .75rem;
        margin-bottom: 0; }
    .nav-sidebar .nav-link p {
        font-weight: 600;
        font-size: 1rem; }
    .nav-sidebar > .nav-treeview {
        margin-top: .25rem; }

.brand-link {
    background: #253138;
    color: #fff !important;
    font-weight: 700; }

.content-header {
    padding-top: 25px;
    padding-bottom: 20px; }
    .content-header h1 {
        font-weight: 700; }

.tooltip {
    margin-left: 10px; }

.tooltip-inner {
    font-weight: 600;
    line-height: 1.6;
    font-size: 14px; }

.table-title {
    font-size: 18px;
    font-weight: 700;
    margin-bottom: .75rem;
    margin-top: 1.5rem; }

.table-fixed {
    table-layout: fixed; }

.table th {
    background: #f2f2f2;
    vertical-align: middle;
    font-weight: 500;
    white-space: nowrap; }

.table td {
    vertical-align: middle;
    color: #555; }

.table thead th {
    border-bottom-width: 1px;
    vertical-align: middle; }

.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td,
.table-bordered > tbody > tr > th,
.table-bordered > tbody > tr > td {
    height: 50px;
    padding-top: 6px;
    padding-bottom: 6px; }

.table-bordered .badge-danger {
    transform: translateY(-1px); }

.main_search_result_list .table-bordered th,
.main_search_result_list .table-bordered td {
    padding-top: .25rem;
    padding-bottom: .25rem;
    height: 40px; }

.main_search_result_list .table-bordered tr:hover {
    background: #f2f6f7; }

.form-text {
    color: #959ca3;
    font-size: 92%; }

.inquery-area {
    margin-bottom: 3rem; }
    .inquery-area .table-bordered {
        table-layout: fixed; }
    .inquery-area .btns {
        display: flex;
        justify-content: center; }
        .inquery-area .btns .btn {
            margin: 0 5px; }

.box {
    background: #f1f1f1;
    border-radius: .25rem; }

ul.box {
    display: flex;
    flex-wrap: wrap;
    max-width: 800px; }
    ul.box li {
        flex: 1 1 33.33333%;
        max-width: 33.33333%;
        padding: .25rem .5rem; }

.uploaded {
    display: inline-block;
    min-width: 300px;
    min-height: 36px;
    background: #f1f1f1;
    padding: 8px .75rem;
    border-radius: .25rem; }
    .uploaded .item + .item {
        margin-top: .5rem; }

.popup-preview {
    display: inline-block;
    max-height: 700px; }

.input-next-radio {
    display: none;
    align-items: center; }
    .input-next-radio > label {
        white-space: nowrap;
        margin-right: 10px;
        margin-bottom: 0; }
    .input-next-radio.show {
        display: inline-flex; }

.student-courses-profile dl {
    display: flex;
    flex-wrap: wrap; }
    .student-courses-profile dl + dl {
        margin-top: .5rem; }
    .student-courses-profile dl dt {
        font-weight: 500; }
        .student-courses-profile dl dt::after {
            content: ' : ';
            margin-right: 5px; }
    .student-courses-profile dl dd {
        margin-right: 20px;
        color: #666;
        margin-bottom: 0; }

.profile-thumb {
    width: 100px;
    height: 100px;
    overflow: hidden;
    border: 1px solid #ececec;
    vertical-align: middle; }
    .profile-thumb img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center center; }

.custom-file-img input {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0; }

.increase-btn {
    width: 36px;
    height: 36px; }

.scheduler-date .ui-datepicker-calendar {
    display: none; }

.scheduler-date .ui-datepicker {
    border: 0; }

.scheduler-date .ui-datepicker-buttonpane {
    display: none; }

.scheduler-date .ui-widget.ui-datepicker {
    width: auto; }

.scheduler-date .ui-state-hover {
    border: 0;
    background: none; }

.scheduler-date .ui-widget select {
    font-family: inherit; }

.scheduler-date .ui-datepicker .ui-datepicker-title {
    line-height: normal;
    font-weight: 500;
    font-size: 16px;
    min-width: 190px; }

.scheduler-date .ui-datepicker .ui-datepicker-prev,
.scheduler-date .ui-datepicker .ui-datepicker-next {
    top: 50%;
    transform: translateY(-50%);
    width: 36px;
    height: 36px;
    cursor: pointer;
    border: 1px solid #d5d8db; }

.scheduler-date .ui-datepicker .ui-datepicker-prev {
    left: 0; }

.scheduler-date .ui-datepicker .ui-datepicker-next {
    right: 0; }

.scheduler-date .ui-widget.ui-datepicker {
    padding: 0; }
    .scheduler-date .ui-widget.ui-datepicker .ui-widget-header {
        padding: 0; }

.fc-toolbar-chunk {
    display: inline-flex;
    align-items: center; }

.fc-toolbar-title {
    display: inline-flex;
    align-items: center; }

.fc-scrollgrid th {
    padding: 1rem; }

.fc-view {
    border-top: 2px solid #111; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
